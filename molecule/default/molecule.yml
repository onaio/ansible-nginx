---
dependency:
  name: galaxy
  options:
    ignore-certs: True
driver:
  name: docker
lint: |
  set -e
  yamllint .
  flake8
platforms:
  - name: nginx-ubuntu-18.04
    image: geerlingguy/docker-ubuntu1804-ansible:latest
    privileged: true
    pre_build_image: true
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    cgroupns_mode: host
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    published_ports:
      - 80/tcp
      - 443/tcp
      - 10000/tcp
      - 53/udp
    env:
      LC_ALL: "C.UTF-8"
      LANG: "C.UTF-8"
      ANSIBLE_LOCAL_TEMP: "${WORKSPACE:-$HOME}/.ansible/tmp"
      ANSIBLE_REMOTE_TMP: /tmp
  - name: nginx-ubuntu-20.04
    image: geerlingguy/docker-ubuntu2004-ansible:latest
    privileged: true
    pre_build_image: true
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    cgroupns_mode: host
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    published_ports:
      - 80/tcp
      - 443/tcp
      - 10000/tcp
      - 53/udp
    env:
      LC_ALL: "C.UTF-8"
      LANG: "C.UTF-8"
      ANSIBLE_LOCAL_TEMP: "${WORKSPACE:-$HOME}/.ansible/tmp"
      ANSIBLE_REMOTE_TMP: /tmp
  - name: nginx-ubuntu-22.04
    image: geerlingguy/docker-ubuntu2204-ansible:latest
    privileged: true
    pre_build_image: true
    command: ""
    cgroupns_mode: host
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    published_ports:
      - 80/tcp
      - 443/tcp
      - 10000/tcp
      - 53/udp
    env:
      LC_ALL: "C.UTF-8"
      LANG: "C.UTF-8"
      ANSIBLE_LOCAL_TEMP: "${WORKSPACE:-$HOME}/.ansible/tmp"
      ANSIBLE_REMOTE_TMP: /tmp
    tmpfs:
      - /tmp
provisioner:
  name: ansible
  lint:
    name: ansible-lint
    enabled: false
scenario:
  name: default
  test_sequence:
    - dependency
    - lint
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - side_effect
    - verify
    - cleanup
    - destroy
verifier:
  name: testinfra
